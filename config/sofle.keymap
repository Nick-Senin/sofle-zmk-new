/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESCAPE         &kp N1  &kp N2    &kp N3            &kp N4        &kp N5                               &kp N6     &kp N7            &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB            &kp Q   &kp W     &kp E             &kp R         &kp T                                &kp Y      &kp U             &kp I      &kp O     &kp P     &kp LEFT_BRACKET
&kp LC(BACKSPACE)  &kp A   &kp S     &kp D             &kp F         &kp G                                &kp H      &kp J             &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT          &kp Z   &kp X     &kp C             &kp V         &kp B      &kp C_MUTE    &none       &kp N      &kp M             &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
                           &kp LGUI  &kp LEFT_CONTROL  &kp LEFT_ALT  &mo LOWER  &kp SPACE     &kp RETURN  &mo RAISE  &kp LS(LEFT_ALT)  &mo 3      &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            label = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp LG(ESC)    &none      &none            &none         &none        &none                                            &none               &none             &none          &none              &none   &none
&kp LG(TAB)    &kp LC(W)  &kp LS(LC(TAB))  &kp UP_ARROW  &kp LC(TAB)  &kp LC(F5)                                       &trans              &kp LA(LC(LEFT))  &trans         &kp LC(LA(RIGHT))  &trans  &trans
&kp BACKSPACE  &kp EXCL   &kp LEFT_ARROW   &kp DOWN      &kp RIGHT    &kp LC(PSCRN)                                    &kp LC(LEFT_ARROW)  &kp LC(UP_ARROW)  &kp LC(DOWN)   &kp LC(RIGHT)      &trans  &kp LS(LC(DELETE))
&trans         &kp LC(A)  &kp LC(X)        &kp LC(C)     &kp LC(V)    &kp DELETE     &trans         &trans             &kp LC(LS(H))       &kp LC(LS(M))     &kp LC(LS(F))  &trans             &trans  &trans
                          &trans           &mo 3         &lt 3 TAB    &trans         &key_repeat    &kp LA(LC(ENTER))  &kp LC(O)           &trans            &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            label = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&kp TAB  &kp F1  &kp F2     &kp F3            &kp F4     &kp F5                                  &trans                &trans                 &trans        &trans     &trans           &trans
&trans   &none   &none      &kp LA(UP_ARROW)  &none      &kp KP_MINUS                            &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE      &kp ESC    &kp SLCK         &kp CAPS
&trans   &none   &none      &none             &none      &none                                   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp UP_ARROW  &kp RIGHT  &kp INS          &mt RIGHT_CONTROL K_APP
&trans   &none   &kp MINUS  &kp PLUS          &kp EQUAL  &trans        &trans         &trans     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp DOWN      &kp PG_DN  &kp PAUSE_BREAK  &trans
                 &trans     &trans            &trans     &trans        &lt 3 ENTER    &lt 3 ESC  &trans                &trans                 &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2      &bt BT_SEL 3   &bt BT_SEL 4                             &none  &kp K_PREV     &kp C_PP       &kp K_NEXT     &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &kp LG(UP_ARROW)  &none          &none                                    &none  &kp LS(LG(U))  &kp LS(LC(I))  &kp LS(LC(O))  &none  &none
&none              &rgb_ug RGB_BRD  &kp LG(LEFT)     &kp LG(DOWN)      &kp LG(RIGHT)  &none                                    &none  &kp LS(LC(J))  &kp LS(LG(K))  &kp RS(RG(L))  &none  &none
&none              &none            &none            &kp LG(D)         &none          &none         &rgb_ug RGB_TOG    &none   &none  &kp C_VOL_DN   &none          &kp C_VOL_UP   &none  &none
                                    &none            &none             &none          &none         &kp LG(ENTER)      &trans  &none  &none          &none          &none
            >;
        };
    };
};
